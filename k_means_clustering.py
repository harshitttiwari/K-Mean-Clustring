# -*- coding: utf-8 -*-
"""K_means_clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eyNVcctLfsylsZzt9pOtGkHyXXEmXBv3

# K-Means Clustering

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

db=pd.read_csv('Mall_Customers.csv')
x=db.iloc[:,[3,4]].values #we have to select the imp features form that

"""## Using the elbow method to find the optimal number of clusters"""

from sklearn.cluster import KMeans # Elbow Method helps us decide the best number of clusters
wcca=[] # here is the using the elbow method
for  i in range(1,11):
  km=KMeans(n_clusters= i, init='k-means++',random_state=42)
  km.fit(x)
  wcca.append(km.inertia_) # inertia
plt.plot(range(1,11) ,wcca)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

"""## Training the K-Means model on the dataset"""

km=KMeans(n_clusters= 5, init='k-means++',random_state=42)  # here cluster will define no of centroid (n_ckuster)
y_kmeans=km.fit_predict(x)

"""## Visualising the clusters"""

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.scatter(km.cluster_centers_[:, 0], km.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroids')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()